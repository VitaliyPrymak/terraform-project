name: CI/CD for frontend

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: main-ecs-cluster
      SERVICE_NAME: frontend
      AWS_REGION: us-east-1
      ECR_REPOSITORY_URL: "084375565192.dkr.ecr.us-east-1.amazonaws.com/frontend-dev"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Docker image
        run: |
          docker build -t ${{ env.ECR_REPOSITORY_URL }}:${{ github.sha }} \
          ./dev-tf-project/frontend \
          -f ./dev-tf-project/frontend/Dockerfile
          docker push ${{ env.ECR_REPOSITORY_URL }}:${{ github.sha }}
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.0

      - name: Terraform Init
        run: |
          cd terraform  # Перехід до папки, де знаходяться файли Terraform
          terraform init

      - name: Terraform Apply
        run: |
          cd terraform  # Перехід до папки, де знаходяться файли Terraform
          terraform apply -auto-approve

      - name: Deploy updated ECS Service
        run: |
          aws ecs update-service \
            --cluster ${{ env.CLUSTER_NAME }} \
            --service ${{ env.SERVICE_NAME }} \
            --force-new-deployment \
            --region ${{ env.AWS_REGION }}
